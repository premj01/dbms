public class Main {

    public static void main(String[] args) {
        System.out.println("hellow WOrld");

        try {

            // MongoClient client = MongoClients.create("mongodb://localhost:27017/");
            MongoClient client = MongoClients.create("mongodb+srv://premj01:premj01@cluster0.zsumw8q.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0");

            MongoDatabase db = client.getDatabase("test");
            MongoCollection<Document> collection = db.getCollection("student");

            while (true) {
                System.out.println("Enter choice :");
                System.out.println("1. Insert Student record ");
                System.out.println("2. Display records ");
                System.out.println("3. Update record ");
                System.out.println("4. Delete record \n\t\t:");

                Scanner sc = new Scanner(System.in);
                int choice = sc.nextInt();

                switch (choice) {
                    case 1: {
                        System.out.print("Name :");
                        sc.nextLine();
                        String name = sc.nextLine();

                        System.out.print("Roll Number :");
                        int roll = sc.nextInt();
                        sc.nextLine();
                        System.out.print("City :");
                        String city = sc.nextLine();

                        Document newStudent = new Document("name", name).append("roll", roll).append("city", city);
                        collection.insertOne(newStudent);
                        System.out.println("Student Added");
                    }
                    break;
                    case 2:
                        FindIterable<Document> records = collection.find();
                        for (Document d : records) {
                            System.out.println(d.toJson());
                        }
                        break;
                    case 3: {

                        System.out.println("Enter name to search record :");
                        String name = sc.nextLine();

                        System.out.println("Enter new name :");
                        String newname = sc.nextLine();
                        Document doc = collection.findOneAndUpdate(Filters.eq("name", name), Updates.set("name", newname));
                        System.out.println("new Name is :" + newname);
                    }
                    break;
                    case 4: {
                        System.out.println("Enter name of student to delete :");
                        sc.nextLine();
                        String name = sc.nextLine();
                        collection.deleteOne(Filters.eq("name", name));
                        System.out.println(name + " is deleted");
                    }
                    break;
                    default:
                        System.out.println("Invalid choice");
                }

            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
